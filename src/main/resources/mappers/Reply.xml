<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dyna.gookie.mapper.ReplyMapper">

    <!--TODO 국회의원에 대한 댓글 카운트 -->
    <select id="replyCount" resultType="int">
        SELECT COUNT(*) FROM reply
        <where>
            mona_cd = #{monaCd} AND reply_status = 1
        </where>
    </select>

    <!--TODO 국회의원에 대한 댓글 리스트 -->
    <select id="replyList" resultType="ReplyListDto">
        SELECT r.*, m.member_name,
        (SELECT COUNT(*) FROM likes l WHERE r.reply_id = l.reply_id AND likes_type = 0) AS likesCount
        <if test="memberId neq null and memberId neq ''.toString()">
            ,ifnull(l.likes_id,0) AS myLike
        </if>
        FROM reply r
        LEFT JOIN member m ON m.member_id = r.member_id
        <if test="memberId neq null and memberId neq ''.toString()">
            left JOIN (SELECT * from likes WHERE member_id = #{memberId} AND likes_type = 0) l ON l.reply_id =r.reply_id
        </if>
        WHERE r.mona_cd = #{monaCd} AND r.reply_status = 1
        ORDER BY r.reply_create_date DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!--TODO 베스트 댓글 리스트 -->
    <select id="bestReplyList" resultType="ReplyListDto">
        SELECT r.*, m.member_name,
               (SELECT COUNT(*) FROM likes l WHERE r.reply_id = l.reply_id AND likes_type = 0) AS likesCount
        FROM reply r
                 LEFT JOIN member m ON m.member_id = r.member_id
        WHERE r.reply_status = 1 <![CDATA[AND DATE(r.reply_create_date) >= DATE(#{startDate}) AND DATE(r.reply_create_date) <= DATE(#{endDate})]]>
        ORDER BY likesCount DESC
            LIMIT 0,5
    </select>

    <!--TODO 댓글 작성-->
    <insert id="replyWrite">
        <selectKey keyProperty="role" resultType="String" order="BEFORE">
            SELECT member_role FROM member WHERE member_id = #{memberId}
        </selectKey>
        <if test="role.equals('MEMBER')">
            INSERT INTO reply
            (member_id, mona_cd, reply_content)
            VALUES
            (#{memberId}, #{monaCd}, #{replyContent})
        </if>
    </insert>

    <!--TODO 댓글 수정-->
    <update id="replyModify">
        UPDATE reply
        SET reply_content = #{replyContent},
            reply_modify_date = NOW()
        WHERE reply_id = #{replyId} AND member_id = #{memberId}
    </update>

    <!--TODO 댓글 삭제-->
    <delete id="replyDelete">
        UPDATE reply
        SET reply_status = 0
        WHERE reply_id = #{replyId} AND member_id = #{memberId}
    </delete>
</mapper>
