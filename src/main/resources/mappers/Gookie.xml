<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dyna.gookie.mapper.GookieMapper">

    <!--TODO 국회의원 상세정보-->
    <select id="detailGookie" resultType="Gookie">
        SELECT
            A.*
             ,(SELECT COUNT(*) FROM favorites WHERE mona_cd = A.mona_cd) AS count
             <if test="member_id neq null and member_id neq ''.toString">
                 ,(SELECT COUNT(*) FROM favorites WHERE mona_cd = A.mona_cd AND member_id = #{member_id}) AS myfv
             </if>
        FROM gookie A
        WHERE mona_cd = #{monaCd}
    </select>

    <select id="getGookieFav" resultType="Gookie">
        SELECT count(*) as count FROM favorites
        WHERE mona_cd = #{monaCd}
    </select>

    <!--TODO 국회의원 회의정보-->
    <select id="getMeetingList" resultType="hashmap">
        SELECT * FROM meeting
    </select>

    <!--TODO 국회의원 회의정보-->
    <select id="getGookieList" resultType="hashmap">
        SELECT orig_nm,e_mail,poly_nm,hg_nm,mona_cd FROM gookie order by hg_nm
    </select>

    <!--TODO 국회의원 회의정보-->
    <select id="getBestCom" resultType="hashmap">
        SELECT
               A.mona_cd
             , A.con_count
             , A.total_count
             , Round(A.con_count/A.total_count*100) AS rate
             , gk.hg_nm
             , gk.poly_nm
             , gk.e_mail
            FROM(
                SELECT
                       rp.mona_cd
                     , count(cr.reply_id) AS con_count
                     , count(rp.reply_id) AS total_count
                FROM reply rp
                         left outer JOIN (
                    SELECT
                           reply_id
                         , COUNT(reply_id) AS count
                    FROM congress_reply
                    GROUP BY reply_id
                ) cr
                ON cr.reply_id = rp.reply_id
                GROUP BY  mona_cd
            )A

                INNER JOIN gookie gk
                ON gk.mona_cd = A.mona_cd
                ORDER BY rate desc
                LIMIT 0,5
    </select>

    <select id="getMostFa" resultType="hashmap">
        SELECT A.fv_count, A.mona_cd, gk.hg_nm,gk.poly_nm FROM (
           SELECT f.mona_cd,COUNT(f.mona_cd) AS fv_count
                FROM favorites f
                INNER JOIN gookie gk
                ON gk.mona_cd = f.mona_cd
           GROUP BY f.mona_cd) A
           INNER JOIN gookie gk
           ON gk.mona_cd = A.mona_cd
        ORDER BY A.fv_count DESC
    </select>

    <select id="getMillId" resultType="hashmap">
        select bill_id from allMeeting
    </select>

    <insert id="insertOpenApi">
        insert into meetingResult
        (mona_cd , result)
        values
        (#{mona_cd},#{result})
    </insert>

    <select id="meetingResult" resultType="hashmap">
        SELECT result , COUNT(*) AS count FROM meetingResult WHERE mona_cd = #{mona_cd} GROUP BY result
    </select>

    <select id="getMyRate" resultType="hashmap">
        SELECT
            A.mona_cd
             , A.con_count
             , A.total_count
             , Round(A.con_count/A.total_count*100) AS rate
             , gk.hg_nm
             , gk.poly_nm
             , gk.e_mail
        FROM(
                SELECT
                    rp.mona_cd
                     , count(cr.reply_id) AS con_count
                     , count(rp.reply_id) AS total_count
                FROM reply rp
                         left outer JOIN (
                    SELECT
                        reply_id
                         , COUNT(reply_id) AS count
                    FROM congress_reply
                    GROUP BY reply_id
                ) cr
                                         ON cr.reply_id = rp.reply_id
                GROUP BY  mona_cd
            )A

                INNER JOIN gookie gk
                           ON gk.mona_cd = A.mona_cd
        WHERE A.mona_cd = #{mona_cd}
        ORDER BY rate desc
    </select>

    <select id="getPresent" resultType="hashmap">
        SELECT * FROM meeting  WHERE rst_proposer = (SELECT hg_nm FROM gookie WHERE mona_cd = #{mona_cd} ) LIMIT 0,5
    </select>

    <select id="getAlarm" resultType="hashmap">
        SELECT DISTINCT (r.reply_id),r.mona_cd,m.member_name,r.member_id,r.reply_create_date,g.hg_nm,g.poly_nm ,ifNull(a.reply_id,0)AS alarm
        FROM reply r
                 JOIN congress_reply cr ON cr.reply_id = r.reply_id
                 INNER JOIN member m ON m.member_id = r.member_id
                 left JOIN gookie g ON g.mona_cd = r.mona_cd
                 LEFT JOIN alarm a ON a.reply_id = r.reply_id and a.member_id = #{memberId}
        <if test="monaCd eq null or monaCd eq ''.toString()">
            WHERE r.member_id = #{memberId}
        </if>
        <if test="monaCd neq null and monaCd neq ''.toString()">
            WHERE r.mona_cd = #{monaCd}
        </if>
        order by r.reply_create_date desc
        limit 0,20
    </select>

    <insert id="insAlarm" parameterType="hashmap">
        insert into alarm
        (member_id,reply_id)
        values
        (#{member_id},#{reply_id})
    </insert>
</mapper>
